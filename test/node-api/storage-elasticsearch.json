{
  "name": "elasticsearch",
  "request": {
    "method": "GET",
    "base": "http://dev.dictadata.org:8089/node/",
    "auth": "user:user"
  },
  "expected": {
    "statusCode": 200
  },
  "queries": [
    {
      "name": "status",
      "request": {
        "method": "GET",
        "url": "status/es_foo_schema"
      }
    },
    {
      "name": "createSchema",
      "request": {
        "method": "PUT",
        "url": "encoding/es_foo_schema_pk",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": "./data/input/foo_schema.encoding.json"
      },
      "expected": {
        "statusCode": 200,
        "resultCode": [
          0,
          200,
          201,
          409
        ]
      }
    },
    {
      "name": "getEncoding",
      "request": {
        "method": "GET",
        "url": "encoding/es_foo_schema_pk"
      }
    },
    {
      "name": "list",
      "request": {
        "method": "GET",
        "url": "list/es_foo_schema_pk",
        "params": {
          "schema": "foo*"
        }
      },
      "expected": {
        "compareValues": 1
      }
    },
    {
      "name": "store keystore",
      "request": {
        "method": "PUT",
        "url": "store/es_foo_schema",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "fifty": {
            "Foo": "fifty",
            "Bar": "Grant",
            "Baz": 50,
            "Fobe": 50.5,
            "Dt Test": "2022-05-05T08:00:00",
            "enabled": true
          }
        }
      },
      "expected": {
        "compareValues": 1
      }
    },
    {
      "name": "store keyfield",
      "request": {
        "method": "PUT",
        "url": "store/es_foo_schema_id",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": [
          {
            "Foo": "ten",
            "Bar": "row",
            "Baz": 10,
            "Fobe": 10.10,
            "Dt Test": "10/27/2018",
            "enabled": true
          }
        ]
      }
    },
    {
      "name": "store primarykey",
      "request": {
        "method": "PUT",
        "url": "store/es_foo_schema_pk",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": [
          {
            "Foo": "eleventy",
            "Bar": "row",
            "Baz": 11,
            "Fobe": 11.11,
            "Dt Test": "2011-10-07T08:00:00",
            "enabled": true
          },
          {
            "Foo": "twelvety",
            "Bar": "row",
            "Baz": 12,
            "Fobe": 12.12,
            "Dt Test": "2012-03-03T08:00:00",
            "enabled": true
          }
        ]
      },
      "expected": {
        "compareValues": 1
      }
    },
    {
      "name": "recall keystore",
      "request": {
        "method": "GET",
        "url": "recall/es_foo_schema",
        "params": {
          "key": "fifty"
        }
      }
    },
    {
      "name": "recall primarykey",
      "request": {
        "method": "POST",
        "url": "recall/es_foo_schema_pk",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Foo": "twelvety"
            }
          }
        }
      }
    },
    {
      "name": "transfer",
      "request": {
        "method": "POST",
        "url": "transfer",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "tract": {
            "origin": {
              "SMT": "json_foofile"
            },
            "terminal": {
              "SMT": "es_foo_schema"
            }
          }
        }
      }
    },
    {
      "name": "retrieve",
      "request": {
        "method": "POST",
        "url": "retrieve/es_foo_schema",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Bar": "row",
              "Baz": {
                "gte": 100,
                "lte": 500
              }
            },
            "count": 3,
            "order": {
              "Foo": "asc"
            }
          }
        }
      }
    },
    {
      "name": "retrieve search",
      "request": {
        "method": "POST",
        "url": "retrieve/es_foo_schema",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Bar": {
                "search": "row boat"
              }
            }
          }
        }
      }
    },
    {
      "name": "retrieve geo_shape",
      "request": {
        "method": "POST",
        "url": "retrieve/tiger2020",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "geometry": {
                "contains": [
                  -73.985428,
                  40.748817
                ]
              }
            }
          }
        }
      }
    },
    {
      "name": "aggregate",
      "request": {
        "method": "POST",
        "url": "retrieve/es_foo_schema",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Bar": "row",
              "Baz": {
                "gte": 100,
                "lte": 500
              }
            },
            "aggregate": {
              "baz_sum": {
                "sum": "Baz"
              },
              "dt_min": {
                "min": "Dt Test"
              },
              "dt_max": {
                "max": "Dt Test"
              }
            }
          }
        }
      }
    },
    {
      "name": "groupby",
      "request": {
        "method": "POST",
        "url": "retrieve/es_foo_schema",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Bar": "row",
              "Baz": {
                "gte": 100,
                "lte": 500
              }
            },
            "aggregate": {
              "baz_sum": {
                "sum": "Baz"
              },
              "dt_min": {
                "min": "Dt Test"
              },
              "dt_max": {
                "max": "Dt Test"
              }
            }
          }
        }
      }
    },
    {
      "name": "dull keystore",
      "request": {
        "method": "DELETE",
        "url": "dull/es_foo_schema",
        "params": {
          "key": "fifty"
        }
      }
    },
    {
      "name": "dull keyfield",
      "request": {
        "method": "DELETE",
        "url": "dull/es_foo_schema_id",
        "params": {
          "Foo": "ten"
        }
      }
    },
    {
      "name": "dull primarykey",
      "request": {
        "method": "POST",
        "url": "dull/es_foo_schema_pk",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "data": {
          "pattern": {
            "match": {
              "Foo": [
                "eleventy",
                "twelvety"
              ]
            }
          }
        }
      }
    }
  ]
}
